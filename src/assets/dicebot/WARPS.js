/* Generated by Opal 0.11.4 */
(function(Opal) {
  function $rb_le(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);
  }
  function $rb_ge(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);
  }
  function $rb_minus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);
  }
  var self = Opal.top, $nesting = [], nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;

  Opal.add_stubs(['$debug', '$<=', '$>=', '$==', '$!=', '$-', '$output']);
  return (function($base, $super, $parent_nesting) {
    function $WARPS(){};
    var self = $WARPS = $klass($base, $super, 'WARPS', $WARPS);

    var def = self.$$proto, $nesting = [self].concat($parent_nesting), TMP_WARPS_gameName_1, TMP_WARPS_gameType_2, TMP_WARPS_getHelpMessage_3, TMP_WARPS_check_2D6_4;

    
    
    Opal.defn(self, '$gameName', TMP_WARPS_gameName_1 = function $$gameName() {
      var self = this;

      return "ワープス"
    }, TMP_WARPS_gameName_1.$$arity = 0);
    
    Opal.defn(self, '$gameType', TMP_WARPS_gameType_2 = function $$gameType() {
      var self = this;

      return "WARPS"
    }, TMP_WARPS_gameType_2.$$arity = 0);
    
    Opal.defn(self, '$getHelpMessage', TMP_WARPS_getHelpMessage_3 = function $$getHelpMessage() {
      var self = this;

      return "失敗、成功度の自動判定を行います。\n"
    }, TMP_WARPS_getHelpMessage_3.$$arity = 0);
    return (Opal.defn(self, '$check_2D6', TMP_WARPS_check_2D6_4 = function $$check_2D6(total_n, dice_n, signOfInequality, diff, _dice_cnt, _dice_max, _n1, _n_max) {
      var self = this, success = nil;

      
      self.$debug("WARPS check_2D6 betgin");
      self.$debug("diff", diff);
      self.$debug("total_n", total_n);
      if ($truthy($rb_le(dice_n, 2))) {
        return " ＞ クリティカル"
      } else if ($truthy($rb_ge(dice_n, 12))) {
        return " ＞ ファンブル"
      } else if (signOfInequality['$==']("<=")) {
        if ($truthy(diff['$!=']("?"))) {
          if ($truthy($rb_le(total_n, diff))) {
            
            success = $rb_minus(diff, total_n);
            return "" + " ＞ " + (success) + "成功";
            } else {
            return " ＞ 失敗"
          }}};
      return self.$output();
    }, TMP_WARPS_check_2D6_4.$$arity = 8), nil) && 'check_2D6';
  })($nesting[0], Opal.const_get_relative($nesting, 'DiceBot'), $nesting)
})(Opal);

/* Generated by Opal 0.11.4 */
(function(Opal) {
  var self = Opal.top, $nesting = [], nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

  Opal.add_stubs(['$exit']);
  return Opal.const_get_relative($nesting, 'Kernel').$exit()
})(Opal);
