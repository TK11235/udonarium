/* Generated by Opal 1.0.3 */
(function(Opal) {
  function $rb_le(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);
  }
  function $rb_ge(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);
  }
  function $rb_minus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);
  }
  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;

  Opal.add_stubs(['$<=', '$>=', '$==', '$!=', '$-']);
  return (function($base, $super, $parent_nesting) {
    var self = $klass($base, $super, 'WARPS');

    var $nesting = [self].concat($parent_nesting), $WARPS_check_2D6$1;

    
    Opal.const_set($nesting[0], 'ID', "WARPS");
    Opal.const_set($nesting[0], 'NAME', "ワープス");
    Opal.const_set($nesting[0], 'SORT_KEY', "わあふす");
    Opal.const_set($nesting[0], 'HELP_MESSAGE', "失敗、成功度の自動判定を行います。\n");
    return (Opal.def(self, '$check_2D6', $WARPS_check_2D6$1 = function $$check_2D6(total, dice_total, _dice_list, cmp_op, target) {
      var $a, self = this;

      if ($truthy($rb_le(dice_total, 2))) {
        return " ＞ クリティカル"
      } else if ($truthy($rb_ge(dice_total, 12))) {
        return " ＞ ファンブル"
      } else if ($truthy((($a = cmp_op['$==']("<=")) ? target['$!=']("?") : cmp_op['$==']("<=")))) {
        if ($truthy($rb_le(total, target))) {
          return "" + " ＞ " + ($rb_minus(target, total)) + "成功"
        } else {
          return " ＞ 失敗"
        }
      } else {
        return nil
      }
    }, $WARPS_check_2D6$1.$$arity = 5), nil) && 'check_2D6';
  })($nesting[0], $$($nesting, 'DiceBot'), $nesting)
})(Opal);
