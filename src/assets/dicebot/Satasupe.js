/* Generated by Opal 0.11.4 */
(function(Opal) {
  function $rb_gt(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);
  }
  function $rb_plus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);
  }
  function $rb_minus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);
  }
  function $rb_lt(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);
  }
  function $rb_ge(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);
  }
  function $rb_le(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);
  }
  function $rb_times(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);
  }
  var self = Opal.top, $nesting = [], nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy;

  Opal.add_stubs(['$setPrefixes', '$debug', '$checkRoll', '$empty?', '$check_seigou', '$rollTableCommand', '$=~', '$to_i', '$last_match', '$getRollParams', '$>', '$+', '$-', '$<', '$>=', '$getJudgeInfo', '$checkRollLoop', '$nil?', '$!=', '$!', '$getcriticalString', '$==', '$to_s', '$times', '$roll', '$<=', '$*', '$upcase', '$===', '$getTagTableResult', '$getCreateSatasupeResult', '$getNpcTableResult', '$getAnotherTableResult', '$join', '$get_table_by_d66', '$push', '$<<', '$d66', '$get_table_by_number', '$uniq', '$sort', '$[]', '$split', '$rollDiceAddingUp', '$rand', '$get2d6TableInfo', '$getTableIndex', '$max', '$min']);
  return (function($base, $super, $parent_nesting) {
    function $Satasupe(){};
    var self = $Satasupe = $klass($base, $super, 'Satasupe', $Satasupe);

    var def = self.$$proto, $nesting = [self].concat($parent_nesting), TMP_Satasupe_initialize_1, TMP_Satasupe_gameName_2, TMP_Satasupe_gameType_3, TMP_Satasupe_getHelpMessage_4, TMP_Satasupe_rollDiceCommand_5, TMP_Satasupe_checkRoll_6, TMP_Satasupe_getRollParams_7, TMP_Satasupe_getJudgeInfo_8, TMP_Satasupe_getcriticalString_9, TMP_Satasupe_checkRollLoop_11, TMP_Satasupe_check_seigou_12, TMP_Satasupe_rollTableCommand_13, TMP_Satasupe_getTagTableResult_15, TMP_Satasupe_getCreateSatasupeResult_17, TMP_Satasupe_getNpcTableResult_19, TMP_Satasupe_getAnotherTableResult_21, TMP_Satasupe_getTableIndex_22, TMP_Satasupe_get2d6TableInfo_23;

    
    self.$setPrefixes(["(\\d+R|SR\\d+|TAGT|\\w+IET|\\w+IHT|F\\w*T|F\\w*T|A\\w*T|G\\w*A\\w*T|A\\w*T|R\\w*FT|NPCT|KusaiMT|EnterT|BudTT|GetgT|GetzT|GetnT|GetkT|GETSST).*"]);
    
    Opal.defn(self, '$initialize', TMP_Satasupe_initialize_1 = function $$initialize() {
      var self = this, $iter = TMP_Satasupe_initialize_1.$$p, $yield = $iter || nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;

      if ($iter) TMP_Satasupe_initialize_1.$$p = null;
      // Prepare super implicit arguments
      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {
        $zuper[$zuper_i] = arguments[$zuper_i];
      }
      
      $send(self, Opal.find_super_dispatcher(self, 'initialize', TMP_Satasupe_initialize_1, false), $zuper, $iter);
      self.sendMode = 2;
      self.sortType = 1;
      return (self.d66Type = 2);
    }, TMP_Satasupe_initialize_1.$$arity = 0);
    
    Opal.defn(self, '$gameName', TMP_Satasupe_gameName_2 = function $$gameName() {
      var self = this;

      return "サタスペ"
    }, TMP_Satasupe_gameName_2.$$arity = 0);
    
    Opal.defn(self, '$gameType', TMP_Satasupe_gameType_3 = function $$gameType() {
      var self = this;

      return "Satasupe"
    }, TMP_Satasupe_gameType_3.$$arity = 0);
    
    Opal.defn(self, '$getHelpMessage', TMP_Satasupe_getHelpMessage_4 = function $$getHelpMessage() {
      var self = this;

      return "" + "・判定コマンド　(nR>=x[y,z,c] or nR>=x or nR>=[,,c] etc)\n" + "　nが最大ロール回数、xが難易度、yが目標成功度、zがファンブル値、cが必殺値。\n" + "　y と z と c は省略可能です。(省略時、y＝無制限、z＝1、c=13(なし))\n" + "　c の後ろにSを記述すると必殺が出た時点で判定を終了します。\n" + "　例）5R>=5[10,2,7S]\n" + "・性業値コマンド(SRx or SRx+y or SRx-y x=性業値 y=修正値)\n" + "・各種表 ： コマンド末尾に数字を入れると複数回の一括実行が可能　例）TAGT3\n" + "　・タグ決定表(TAGT)\n" + "　・命中判定ファンブル表(FumbleT)、致命傷表(FatalT)\n" + "　・ロマンスファンブル表(RomanceFT)\n" + "　・アクシデント表(AccidentT)、汎用アクシデント表(GeneralAT)\n" + "　・その後表　(AfterT)、臭い飯表(KusaiMT)、登場表(EnterT)、\n" + "　　　バッドトリップ表(BudTT)\n" + "　・報酬表(Get〜) ： ガラクタ(GetgT)、実用品(GetzT)、値打ち物(GetnT)、\n" + "　　　奇天烈(GetkT)\n" + "　・NPCの年齢と好みを一括出力(NPCT)\n" + "　・「サタスペ」のベースとアクセサリを出力(GETSSTx　xはアクセサリ数、省略時１)\n" + "・以下のコマンドは +,- でダイス目修正、=でダイス目指定が可能\n" + "　例）CrimeIET+1　CrimeIET-1　CrimeIET=7\n" + "　・情報イベント表(〜IET) ： 犯罪表(CrimeIET)、生活表(LifeIET)、\n" + "　　　恋愛表(LoveIET)、教養表(CultureIET)、戦闘表(CombatIET)\n" + "　・情報ハプニング表(〜IHT) ： 犯罪表(CrimeIHT)、生活表(LifeIHT)、\n" + "　　　恋愛表(LoveIHT)、教養表(CultureIHT)、戦闘表(CombatIHT)\n" + "・D66ダイスあり\n"
    }, TMP_Satasupe_getHelpMessage_4.$$arity = 0);
    
    Opal.defn(self, '$rollDiceCommand', TMP_Satasupe_rollDiceCommand_5 = function $$rollDiceCommand(command) {
      var self = this, result = nil;

      
      self.$debug("rollDiceCommand begin string", command);
      result = "";
      result = self.$checkRoll(command);
      if ($truthy(result['$empty?']())) {
        } else {
        return result
      };
      self.$debug("判定ロールではなかった");
      result = self.$check_seigou(command);
      if ($truthy(result['$empty?']())) {
        } else {
        return result
      };
      self.$debug("〔性業値〕チェックでもなかった");
      self.$debug("各種表として処理");
      return self.$rollTableCommand(command);
    }, TMP_Satasupe_rollDiceCommand_5.$$arity = 1);
    
    Opal.defn(self, '$checkRoll', TMP_Satasupe_checkRoll_6 = function $$checkRoll(string) {
      var $a, $b, self = this, roll_times = nil, target = nil, params = nil, min_suc = nil, fumble = nil, critical = nil, isCriticalStop = nil, result = nil, dice_str = nil, total_suc = nil, isCritical = nil, isFumble = nil;

      
      self.$debug("checkRoll begin string", string);
      if ($truthy(/^(\d+)R>=(\d+)(\[(\d+)?(,|,\d+)?(,\d+(S)?)?\])?$/i['$=~'](string))) {
        } else {
        return ""
      };
      roll_times = Opal.const_get_relative($nesting, 'Regexp').$last_match(1).$to_i();
      target = Opal.const_get_relative($nesting, 'Regexp').$last_match(2).$to_i();
      params = Opal.const_get_relative($nesting, 'Regexp').$last_match(3);
      $b = self.$getRollParams(params), $a = Opal.to_ary($b), (min_suc = ($a[0] == null ? nil : $a[0])), (fumble = ($a[1] == null ? nil : $a[1])), (critical = ($a[2] == null ? nil : $a[2])), (isCriticalStop = ($a[3] == null ? nil : $a[3])), $b;
      result = "";
      if ($truthy($rb_gt(target, 12))) {
        
        result = $rb_plus(result, "" + "【" + (string) + "】 ＞ 難易度が12を超えたため、超過分、ファンブル率が上昇！\n");
        while ($truthy($rb_gt(target, 12))) {
          
          target = $rb_minus(target, 1);
          fumble = $rb_plus(fumble, 1);
        };};
      if ($truthy(($truthy($a = $rb_lt(critical, 1)) ? $a : $rb_gt(critical, 12)))) {
        critical = 13};
      if ($truthy($rb_ge(fumble, 6))) {
        
        result = $rb_plus(result, "" + (self.$getJudgeInfo(target, fumble, critical)) + " ＞ ファンブル率が6を超えたため自動失敗！");
        return result;};
      if ($truthy($rb_lt(target, 5))) {
        
        result = $rb_plus(result, "" + "【" + (string) + "】 ＞ あらゆる難易度は5未満にはならないため、難易度は5になる！\n");
        target = 5;};
      $b = self.$checkRollLoop(roll_times, min_suc, target, critical, fumble, isCriticalStop), $a = Opal.to_ary($b), (dice_str = ($a[0] == null ? nil : $a[0])), (total_suc = ($a[1] == null ? nil : $a[1])), (isCritical = ($a[2] == null ? nil : $a[2])), (isFumble = ($a[3] == null ? nil : $a[3])), $b;
      result = $rb_plus(result, "" + (self.$getJudgeInfo(target, fumble, critical)) + " ＞ " + (dice_str) + " ＞ 成功度" + (total_suc));
      if ($truthy(isFumble)) {
        result = $rb_plus(result, " ＞ ファンブル")};
      if ($truthy(($truthy($a = isCritical) ? $rb_gt(total_suc, 0) : $a))) {
        result = $rb_plus(result, " ＞ 必殺発動可能！")};
      self.$debug("checkRoll result result", result);
      return result;
    }, TMP_Satasupe_checkRoll_6.$$arity = 1);
    
    Opal.defn(self, '$getRollParams', TMP_Satasupe_getRollParams_7 = function $$getRollParams(params) {
      var self = this, min_suc = nil, fumble = nil, critical = nil, isCriticalStop = nil;

      
      min_suc = 0;
      fumble = 1;
      critical = 13;
      isCriticalStop = false;
      if ($truthy(params['$nil?']())) {
      } else if ($truthy(/\[(\d*)(,(\d*)?)?(,(\d*)(S)?)?\]/['$=~'](params))) {
        
        min_suc = Opal.const_get_relative($nesting, 'Regexp').$last_match(1).$to_i();
        if ($truthy(Opal.const_get_relative($nesting, 'Regexp').$last_match(3).$to_i()['$!='](0))) {
          fumble = Opal.const_get_relative($nesting, 'Regexp').$last_match(3).$to_i()};
        if ($truthy(Opal.const_get_relative($nesting, 'Regexp').$last_match(4))) {
          critical = Opal.const_get_relative($nesting, 'Regexp').$last_match(5).$to_i()};
        isCriticalStop = Opal.const_get_relative($nesting, 'Regexp').$last_match(6)['$nil?']()['$!']();};
      return [min_suc, fumble, critical, isCriticalStop];
    }, TMP_Satasupe_getRollParams_7.$$arity = 1);
    
    Opal.defn(self, '$getJudgeInfo', TMP_Satasupe_getJudgeInfo_8 = function $$getJudgeInfo(target, fumble, critical) {
      var self = this;

      return "" + "【難易度" + (target) + "、ファンブル率" + (fumble) + (self.$getcriticalString(critical)) + "】"
    }, TMP_Satasupe_getJudgeInfo_8.$$arity = 3);
    
    Opal.defn(self, '$getcriticalString', TMP_Satasupe_getcriticalString_9 = function $$getcriticalString(critical) {
      var self = this, criticalString = nil;

      
      criticalString = (function() {if (critical['$=='](13)) {
        return "なし"
        } else {
        return critical.$to_s()
      }; return nil; })();
      return "" + "、必殺" + (criticalString);
    }, TMP_Satasupe_getcriticalString_9.$$arity = 1);
    
    Opal.defn(self, '$checkRollLoop', TMP_Satasupe_checkRollLoop_11 = function $$checkRollLoop(roll_times, min_suc, target, critical, fumble, isCriticalStop) {
      var TMP_10, self = this, dice_str = nil, isFumble = nil, isCritical = nil, total_suc = nil;

      
      dice_str = "";
      isFumble = false;
      isCritical = false;
      total_suc = 0;
      (function(){var $brk = Opal.new_brk(); try {return $send(roll_times, 'times', [], (TMP_10 = function(_i){var self = TMP_10.$$s || this, $a, $b, d1 = nil, d2 = nil, dice_suc = nil;
if (_i == null) _i = nil;
      
        self.$debug("roll_times", roll_times);
        self.$debug("min_suc, total_suc", min_suc, total_suc);
        if ($truthy(min_suc['$!='](0))) {
          if ($truthy($rb_ge(total_suc, min_suc))) {
            
            self.$debug("(total_suc >= min_suc) break");
            
            Opal.brk(nil, $brk);}};
        $b = self.$roll(1, 6), $a = Opal.to_ary($b), (d1 = ($a[0] == null ? nil : $a[0])), $b;
        $b = self.$roll(1, 6), $a = Opal.to_ary($b), (d2 = ($a[0] == null ? nil : $a[0])), $b;
        dice_suc = 0;
        if ($truthy($rb_le(target, $rb_plus(d1, d2)))) {
          dice_suc = 1};
        if ($truthy(dice_str['$empty?']())) {
          } else {
          dice_str = $rb_plus(dice_str, "+")
        };
        dice_str = $rb_plus(dice_str, "" + (dice_suc) + "[" + (d1) + "," + (d2) + "]");
        total_suc = $rb_plus(total_suc, dice_suc);
        if ($truthy($rb_le(critical, $rb_plus(d1, d2)))) {
          
          isCritical = true;
          dice_str = $rb_plus(dice_str, "『必殺！』");};
        if ($truthy(($truthy($a = d1['$=='](d2)) ? $rb_le(d1, fumble) : $a))) {
          
          isFumble = true;
          isCritical = false;
          
          Opal.brk(nil, $brk);};
        if ($truthy(($truthy($a = isCritical) ? isCriticalStop : $a))) {
          
          Opal.brk(nil, $brk)
          } else {
          return nil
        };}, TMP_10.$$s = self, TMP_10.$$brk = $brk, TMP_10.$$arity = 1, TMP_10))
      } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();
      return [dice_str, total_suc, isCritical, isFumble];
    }, TMP_Satasupe_checkRollLoop_11.$$arity = 6);
    
    Opal.defn(self, '$check_seigou', TMP_Satasupe_check_seigou_12 = function $$check_seigou(string) {
      var $a, $b, self = this, target = nil, operator = nil, value = nil, dice = nil, modify = nil, diceTotal = nil, seigou = nil, result = nil;

      
      self.$debug("check_seigou begin string", string);
      if ($truthy(/^SR(\d+)(([+]|[-])(\d+))?$/i['$=~'](string))) {
        } else {
        return ""
      };
      target = Opal.const_get_relative($nesting, 'Regexp').$last_match(1).$to_i();
      operator = Opal.const_get_relative($nesting, 'Regexp').$last_match(3);
      value = Opal.const_get_relative($nesting, 'Regexp').$last_match(4).$to_i();
      $b = self.$roll(2, 6), $a = Opal.to_ary($b), (dice = ($a[0] == null ? nil : $a[0])), $b;
      modify = 0;
      if ($truthy(operator['$nil?']())) {
        } else {
        
        if (operator['$==']("+")) {
          modify = value};
        if (operator['$==']("-")) {
          modify = $rb_times(value, -1)};
      };
      diceTotal = $rb_plus(dice, modify);
      seigou = "";
      if ($truthy($rb_lt(target, diceTotal))) {
        seigou = "「激」"};
      if (target['$=='](diceTotal)) {
        seigou = "「迷」"};
      if ($truthy($rb_gt(target, diceTotal))) {
        seigou = "「律」"};
      result = "" + "〔性業値〕" + (target) + "、「修正値」" + (modify) + " ＞ ダイス結果：（" + (dice) + "） ＞ " + (dice) + "＋（" + (modify) + "）＝" + (diceTotal) + " ＞ " + (seigou);
      if (dice['$=='](2)) {
        result = $rb_plus(result, " ＞ 1ゾロのため〔性業値〕が1点上昇！")};
      if (dice['$=='](12)) {
        result = $rb_plus(result, " ＞ 6ゾロのため〔性業値〕が1点減少！")};
      self.$debug("check_seigou result result", result);
      return result;
    }, TMP_Satasupe_check_seigou_12.$$arity = 1);
    
    Opal.defn(self, '$rollTableCommand', TMP_Satasupe_rollTableCommand_13 = function $$rollTableCommand(command) {
      var self = this, result = nil, counts = nil, operator = nil, value = nil, $case = nil;

      
      command = command.$upcase();
      result = [];
      if ($truthy(/([A-Za-z]+)(\d+)?(([+]|[-]|[=])(\d+))?/['$==='](command))) {
        } else {
        return result
      };
      command = Opal.const_get_relative($nesting, 'Regexp').$last_match(1);
      counts = 1;
      if ($truthy(Opal.const_get_relative($nesting, 'Regexp').$last_match(2))) {
        counts = Opal.const_get_relative($nesting, 'Regexp').$last_match(2).$to_i()};
      operator = Opal.const_get_relative($nesting, 'Regexp').$last_match(4);
      value = Opal.const_get_relative($nesting, 'Regexp').$last_match(5).$to_i();
      self.$debug("rollDiceCommand command", command);
      $case = command;
      if ("TAGT"['$===']($case)) {result = self.$getTagTableResult(counts)}
      else if ("GETSST"['$===']($case)) {result = self.$getCreateSatasupeResult(counts)}
      else if ("NPCT"['$===']($case)) {result = self.$getNpcTableResult(counts)}
      else {result = self.$getAnotherTableResult(command, counts, operator, value)};
      return result.$join("\n");
    }, TMP_Satasupe_rollTableCommand_13.$$arity = 1);
    
    Opal.defn(self, '$getTagTableResult', TMP_Satasupe_getTagTableResult_15 = function $$getTagTableResult(counts) {
      var TMP_14, self = this, name = nil, table = nil, result = nil;

      
      name = "タグ決定表";
      table = ["情報イベント", "アブノーマル(サ)", "カワイイ(サ)", "トンデモ(サ)", "マニア(サ)", "ヲタク(サ)", "音楽(ア)", "好きなタグ", "トレンド(ア)", "読書(ア)", "パフォーマンス(ア)", "美術(ア)", "アラサガシ(マ)", "おせっかい(マ)", "好きなタグ", "家事(マ)", "ガリ勉(マ)", "健康(マ)", "アウトドア(休)", "工作(休)", "スポーツ(休)", "同一タグ", "ハイソ(休)", "旅行(休)", "育成(イ)", "サビシガリヤ(イ)", "ヒマツブシ(イ)", "宗教(イ)", "同一タグ", "ワビサビ(イ)", "アダルト(風)", "飲食(風)", "ギャンブル(風)", "ゴシップ(風)", "ファッション(風)", "情報ハプニング"];
      result = [];
      $send(counts, 'times', [], (TMP_14 = function(_i){var self = TMP_14.$$s || this, $a, $b, info = nil, number = nil, text = nil;
if (_i == null) _i = nil;
      
        $b = self.$get_table_by_d66(table), $a = Opal.to_ary($b), (info = ($a[0] == null ? nil : $a[0])), (number = ($a[1] == null ? nil : $a[1])), $b;
        text = "" + (name) + ":" + (number) + ":" + (info);
        return result.$push(text);}, TMP_14.$$s = self, TMP_14.$$arity = 1, TMP_14));
      return result;
    }, TMP_Satasupe_getTagTableResult_15.$$arity = 1);
    
    Opal.defn(self, '$getCreateSatasupeResult', TMP_Satasupe_getCreateSatasupeResult_17 = function $$getCreateSatasupeResult(counts) {
      var $a, $b, TMP_16, self = this, name = nil, hit = nil, damage = nil, life = nil, kutibeni = nil, kiba = nil, abilities = nil, baseParts = nil, partsEffect = nil, number1 = nil, $case = nil, armsTable = nil, armsEffectTable = nil, result = nil, text = nil;

      
      self.$debug("getCreateSatasupeResult counts", counts);
      name = "サタスペ作成";
      hit = 0;
      damage = 0;
      life = 0;
      kutibeni = 0;
      kiba = 0;
      abilities = [];
      baseParts = "" + (name) + "：ベース部品：";
      partsEffect = "部品効果：";
      $b = self.$roll(1, 6), $a = Opal.to_ary($b), (number1 = ($a[0] == null ? nil : $a[0])), $b;
      $case = number1;
      if ((1)['$===']($case)) {
      baseParts = $rb_plus(baseParts, "「紙製の筒」");
      partsEffect = $rb_plus(partsEffect, "「命中：10、ダメージ：3、耐久度1」");
      hit = 10;
      damage = 3;
      life = 1;}
      else if ((2)['$===']($case)) {
      baseParts = $rb_plus(baseParts, "「木製の筒」");
      partsEffect = $rb_plus(partsEffect, "「命中：9、ダメージ：3、耐久度2」");
      hit = 9;
      damage = 3;
      life = 2;}
      else if ((3)['$===']($case)) {
      baseParts = $rb_plus(baseParts, "「小型のプラスチック製の筒」");
      partsEffect = $rb_plus(partsEffect, "「命中：9、ダメージ：4、耐久度2」");
      hit = 9;
      damage = 4;
      life = 2;}
      else if ((4)['$===']($case)) {
      baseParts = $rb_plus(baseParts, "「大型のプラスチック製の筒」");
      partsEffect = $rb_plus(partsEffect, "「命中：8、ダメージ：3、耐久度2、両手」");
      hit = 8;
      damage = 3;
      life = 2;
      abilities['$<<']("「両手」");}
      else if ((5)['$===']($case)) {
      baseParts = $rb_plus(baseParts, "「小型の金属製の筒」");
      partsEffect = $rb_plus(partsEffect, "「命中：9、ダメージ：4、耐久度3」");
      hit = 9;
      damage = 4;
      life = 3;}
      else if ((6)['$===']($case)) {
      baseParts = $rb_plus(baseParts, "「大型の金属製の筒」");
      partsEffect = $rb_plus(partsEffect, "「命中：8、ダメージ：5、耐久度3、両手」");
      hit = 8;
      damage = 5;
      life = 3;
      abilities['$<<']("「両手」");};
      armsTable = [[11, "「パチンコ玉」"], [12, "「釘や画鋲、針」"], [13, "「砂利や小石、ガラスの破片」"], [14, "「口紅」"], [15, "「バネやゼンマイ」"], [16, "「捻子やビス」"], [22, "「生ゴミ」"], [23, "「ゴム」"], [24, "「歯車」"], [25, "「歯や牙、骨」"], [26, "「ワイヤー」"], [33, "「メガネなどのレンズ」"], [34, "「マッチ」"], [35, "「ガムテープや接着剤」"], [36, "「洗濯ばさみ」"], [44, "「花火」"], [45, "「食玩」"], [46, "「真空管やトランジスタ」"], [55, "「エアコンプレッサ」"], [56, "「豆」"], [66, "「ガスボンベや殺虫剤」"]];
      armsEffectTable = [[11, "「武器破壊」"], [12, "「毒」"], [13, "「散弾」"], [14, "「（判定前宣言）一度だけ必殺10」"], [15, "「フル」"], [16, "「ダメージ＋１」"], [22, "「衝撃」"], [23, "「ダメージ＋１」"], [24, "「リボルバー」"], [25, "「（判定前宣言）1D6回、ダメージ＋２」"], [26, "「耐久度＋１」"], [33, "「命中－１」"], [34, "「必殺12」"], [35, "「耐久度＋１」"], [36, "「命中－１」"], [44, "「弾幕1」"], [45, "「暗器」"], [46, "「神秘」"], [55, "「ダメージ＋１」"], [56, "「マヒ」"], [66, "「爆発3」"]];
      baseParts = $rb_plus(baseParts, "  アクセサリ部品：");
      $send(counts, 'times', [], (TMP_16 = function(_i){var self = TMP_16.$$s || this, $c, $d, number2 = nil;
if (_i == null) _i = nil;
      
        number2 = self.$d66(2);
        baseParts = $rb_plus(baseParts, self.$get_table_by_number(number2, armsTable));
        partsEffect = $rb_plus(partsEffect, self.$get_table_by_number(number2, armsEffectTable));
        return (function() {$case = number2;
        if ((11)['$===']($case)) {return abilities['$<<']("「武器破壊」")}
        else if ((12)['$===']($case)) {return abilities['$<<']("「毒」")}
        else if ((13)['$===']($case)) {return abilities['$<<']("「散弾」")}
        else if ((14)['$===']($case)) {return (kutibeni = $rb_plus(kutibeni, 1))}
        else if ((15)['$===']($case)) {return abilities['$<<']("「フル」")}
        else if ((16)['$===']($case) || (23)['$===']($case) || (55)['$===']($case)) {return (damage = $rb_plus(damage, 1))}
        else if ((22)['$===']($case)) {return abilities['$<<']("「衝撃」")}
        else if ((24)['$===']($case)) {return abilities['$<<']("「リボルバー」")}
        else if ((25)['$===']($case)) {return $d = self.$roll(1, 6), $c = Opal.to_ary($d), (kiba = ($c[0] == null ? nil : $c[0])), $d}
        else if ((26)['$===']($case) || (35)['$===']($case)) {return (life = $rb_plus(life, 1))}
        else if ((33)['$===']($case) || (36)['$===']($case)) {return (hit = $rb_minus(hit, 1))}
        else if ((34)['$===']($case)) {return abilities['$<<']("「必殺12」")}
        else if ((44)['$===']($case)) {return abilities['$<<']("「弾幕1」")}
        else if ((45)['$===']($case)) {return abilities['$<<']("「暗器」")}
        else if ((46)['$===']($case)) {return abilities['$<<']("「神秘」")}
        else if ((56)['$===']($case)) {return abilities['$<<']("「マヒ」")}
        else if ((66)['$===']($case)) {return abilities['$<<']("「爆発3」")}
        else { return nil }})();}, TMP_16.$$s = self, TMP_16.$$arity = 1, TMP_16));
      result = [];
      result.$push(baseParts);
      result.$push(partsEffect);
      text = "" + "完成品：サタスペ  （ダメージ＋" + (damage) + "・命中" + (hit) + "・射撃、";
      if ($truthy($rb_gt(kutibeni, 0))) {
        text = $rb_plus(text, "" + "「（判定前宣言）" + (kutibeni) + "回だけ、必殺10」")};
      if ($truthy($rb_gt(kiba, 0))) {
        text = $rb_plus(text, "" + "「（判定前宣言）" + (kiba) + "回だけ、ダメージ＋２」")};
      text = $rb_plus(text, abilities.$sort().$uniq().$join());
      text = $rb_plus(text, "" + "「サタスペ" + (counts) + "」「耐久度" + (life) + "」）");
      result.$push(text);
      return result;
    }, TMP_Satasupe_getCreateSatasupeResult_17.$$arity = 1);
    
    Opal.defn(self, '$getNpcTableResult', TMP_Satasupe_getNpcTableResult_19 = function $$getNpcTableResult(counts) {
      var TMP_18, self = this, lmood = nil, lage = nil, age = nil, agen = nil, name = nil, result = nil;

      
      lmood = ["ダークな", "お金持ちな", "美形な", "知的な", "ワイルドな", "バランスがとれてる"];
      lage = ["年下が好き。", "同い年が好き。", "年上が好き。"];
      age = ["幼年", "少年", "青年", "中年", "壮年", "老年"];
      agen = ["6+2D6", "10+2D6", "15+3D6", "25+4D6", "40+5D6", "60+6D6"];
      name = "NPC表:";
      result = [];
      $send(counts, 'times', [], (TMP_18 = function(_i){var self = TMP_18.$$s || this, $a, $b, age_type = nil, dummy = nil, agen_text = nil, age_num = nil, total = nil, ysold = nil, lmodValue = nil, lageValue = nil, text = nil;
if (_i == null) _i = nil;
      
        $b = self.$roll(1, 6), $a = Opal.to_ary($b), (age_type = ($a[0] == null ? nil : $a[0])), (dummy = ($a[1] == null ? nil : $a[1])), $b;
        age_type = $rb_minus(age_type, 1);
        agen_text = agen['$[]'](age_type);
        age_num = agen_text.$split(/\+/);
        $b = self.$rollDiceAddingUp(age_num['$[]'](1)), $a = Opal.to_ary($b), (total = ($a[0] == null ? nil : $a[0])), (dummy = ($a[1] == null ? nil : $a[1])), $b;
        ysold = $rb_plus(total, age_num['$[]'](0).$to_i());
        lmodValue = lmood['$[]'](self.$rand(6));
        lageValue = lage['$[]'](self.$rand(3));
        text = "" + (name) + (age['$[]'](age_type)) + "(" + (ysold) + "歳):" + (lmodValue) + (lageValue);
        return result.$push(text);}, TMP_18.$$s = self, TMP_18.$$arity = 1, TMP_18));
      return result;
    }, TMP_Satasupe_getNpcTableResult_19.$$arity = 1);
    
    Opal.defn(self, '$getAnotherTableResult', TMP_Satasupe_getAnotherTableResult_21 = function $$getAnotherTableResult(command, counts, operator, value) {
      var $a, $b, TMP_20, self = this, result = nil, name = nil, table = nil;

      
      result = [];
      $b = self.$get2d6TableInfo(command), $a = Opal.to_ary($b), (name = ($a[0] == null ? nil : $a[0])), (table = ($a[1] == null ? nil : $a[1])), $b;
      if ($truthy(name['$empty?']())) {
        return result};
      $send(counts, 'times', [], (TMP_20 = function(_i){var self = TMP_20.$$s || this, $c, $d, _ = nil, index = nil, info = nil, text = nil;
if (_i == null) _i = nil;
      
        $d = self.$getTableIndex(operator, value, 2, 6), $c = Opal.to_ary($d), (_ = ($c[0] == null ? nil : $c[0])), (index = ($c[1] == null ? nil : $c[1])), $d;
        info = table['$[]']($rb_minus(index, 2));
        text = "" + (name) + (index) + ":" + (info);
        return result.$push(text);}, TMP_20.$$s = self, TMP_20.$$arity = 1, TMP_20));
      return result;
    }, TMP_Satasupe_getAnotherTableResult_21.$$arity = 4);
    
    Opal.defn(self, '$getTableIndex', TMP_Satasupe_getTableIndex_22 = function $$getTableIndex(operator, value, diceCount, diceType) {
      var $a, $b, self = this, index = nil, modify = nil, $case = nil;

      
      index = nil;
      modify = 0;
      $case = operator;
      if ("+"['$===']($case)) {modify = value}
      else if ("-"['$===']($case)) {modify = $rb_times(value, -1)}
      else if ("="['$===']($case)) {index = value};
      if ($truthy(index['$nil?']())) {
        
        $b = self.$roll(diceCount, diceType), $a = Opal.to_ary($b), (index = ($a[0] == null ? nil : $a[0])), $b;
        index = $rb_plus(index, modify);};
      index = [index, $rb_times(diceCount, 1)].$max();
      index = [index, $rb_times(diceCount, diceType)].$min();
      return [modify, index];
    }, TMP_Satasupe_getTableIndex_22.$$arity = 4);
    return (Opal.defn(self, '$get2d6TableInfo', TMP_Satasupe_get2d6TableInfo_23 = function $$get2d6TableInfo(command) {
      var self = this, name = nil, table = nil, $case = nil;

      
      name = "";
      table = [];
      $case = command;
      if (/CrimeIET/i['$===']($case)) {
      name = "情報イベント表／〔犯罪〕:";
      table = ["謎の情報屋チュンさん登場。ターゲットとなる情報を渡し、いずこかへ去る。情報ゲット！", "昔やった仕事の依頼人が登場。てがかりをくれる。好きなタグの上位リンク（SL+2）を１つ得る。", "謎のメモを発見……このターゲットについて調べている間、このトピックのタグをチーム全員が所有しているものとして扱う", "謎の動物が亜侠を路地裏に誘う。好きなタグの上位リンクを２つ得る", "偶然、他の亜侠の仕事現場に出くわす。口止め料の代わりに好きなタグの上位リンクを１つ得る", "あまりに適切な諜報活動。コストを消費せず、上位リンクを３つ得る", "その道の権威を紹介される。現在と同じタグの上位リンクを２つ得る", "捜査は足だね。〔肉体点〕を好きなだけ消費する。その値と同じ数の好きなタグの上位リンクを得る", "近所のコンビニで立ち読み。思わぬ情報が手に入る。上位リンクを３つ得る", "そのエリアの支配盟約からメッセンジャーが1D6人。自分のチームがその盟約に敵対していなければ、好きなタグの上位リンクを２つ得る。敵対していれば、メッセンジャーは「盟約戦闘員（p.127）」となる。血戦を行え", "「三下（p.125）」が1D6人現れる。血戦を行え。倒した数だけ、好きなタグの上位リンクを手に入れる"];}
      else if (/LifeIET/i['$===']($case)) {
      name = "情報イベント表／〔生活〕:";
      table = ["謎の情報屋チュンさん登場。ターゲットとなる情報を渡し、いずこかへ去る。情報ゲット！", "隣の奥さんと世間話。上位リンクを４つ得る", "ミナミで接待。次の１ターン何もできない代わりに、好きなタグの上位リンク（SL+2）を１つ得る", "息抜きにテレビを見ていたら、たまたまその情報が。好きなタグの上位リンクを１つ得る", "器用に手に入れた情報を転売する。《札巻》を１個手に入れ、上位リンクを３つ得る", "情報を得るついでに軽い営業。〔サイフ〕を１回復させ、上位リンクを３つ得る", "街の有力者からの突然の電話。そのエリアの盟約の幹部NPCの誰かと【コネ】を結ぶことができる", "金をばらまく。〔サイフ〕を好きなだけ消費する。その値と同じ数の任意の上位リンクを得る", "〔表の顔〕の同僚が思いがけないアドバイスをくれる。上位リンクを1D6つ得る", "謎の情報屋チュンさんが、情報とアイテムのトレードを申し出る。DDの指定するアイテムを１つ手に入れると、どこからともなくチュンさんが現れる。そのアイテムをチュンさんに渡せば、情報ゲット！", "ターゲットとは関係ないが、ドデかい情報を掘り当てる。その情報を売って〔サイフ〕が全快する"];}
      else if (/LoveIET/i['$===']($case)) {
      name = "情報イベント表／〔恋愛〕:";
      table = ["謎の情報屋チュンさん登場。ターゲットとなる情報を渡し、いずこかへ去る。情報ゲット！", "恋人との別れ。自分に恋人がいれば、１人を選んで、お互いのトリコ欄から名前を消す。その代わり情報ゲット！", "とびきり美形の情報提供者と遭遇。〔性業値〕判定で律になると、好きなタグの上位リンクを１つ得る", "敵対する亜侠と第一種接近遭遇。キスのあとの濡れた唇から、上位リンクを３つ得る", "昔の恋人がそれに詳しかったはず。その日の深夜・早朝に行動しなければ、好きなタグの上位リンク（SL+2）を１つ得る", "情報はともかくトリコをゲット。データは「女子高生（p.122）」を使用する", "関係者とすてきな時間を過ごす。好きなタグの上位リンクを１つ得る。ただし、次の１ターンは行動できない", "持つべきものは愛の奴隷。自分のトリコの数だけ好きなタグの上位リンクを得る", "自分よりも１０歳年上のイヤなやつに身体を売る。現在と同じタグの上位リンクを１つ得る", "有力者からの突然のご指名。チームの仲間を１人、ランダムに決定する。差し出すなら、そのキャラクターは次の１ターン行動できない代わり、その後にそのキャラクターの〔恋愛〕と同じ数の上位リンクを得る", "愛する人の死。自分に恋人がいれば、１人選んで、そのキャラクターを死亡させる。その代わり情報ゲット！"];}
      else if (/CultureIET/i['$===']($case)) {
      name = "情報イベント表／〔教養〕:";
      table = ["謎の情報屋チュンさん登場。ターゲットとなる情報を渡し、いずこかへ去る。情報ゲット！", "ネットで幻のリンクサイトを発見。すべての種類のタグに上位リンクがはられる", "間違いメールから恋が始まる。ハンドルしか知らない「女子高生（p.122）」と恋人（お互いのトリコ）の関係になる", "新聞社でバックナンバーを読みふける。上位リンクを６つ得る", "巨大な掲示板群から必要な情報をサルベージ。好きなタグの上位リンクを１つ得る", "検索エンジンにかけたらすぐヒット。コストを消費せず、上位リンクを４つ得る", "警察無線を傍受。興味深い。好きなタグの上位リンクを２つ得る", "クールな推理がさえ渡る。〔精神点〕を好きなだけ消費する。その値と同じ数だけ好きなタグの上位リンクを得る", "図書館ロールが貫通。好きなタグの上位リンク（SL+3)を１つ得る", "図書館で幻の書物を発見。上位リンクを８つ得る。キャラクターシートのメモ欄に<クトゥルフ神話知識>、SANと記入し、それぞれ後ろに＋５、－５の数値を書き加える", "アジトに謎の手紙が届く。自分のアジトに戻れば、情報ゲット！"];}
      else if (/CombatIET/i['$===']($case)) {
      name = "情報イベント表／〔戦闘〕:";
      table = ["謎の情報屋チュンさん登場。ターゲットとなる情報を渡し、いずこかへ去る。情報ゲット！", "昔、お前が『更正』させた大幇のチンピラから情報を得る。〔精神点〕を２点減少し、好きなタグの上位リンク（SL+2）を１つ得る。", "大阪市警の刑事から情報リーク。「敵の敵は味方」ということか……？　〔精神点〕を３点減少し、上位リンクを６つ得る。", "無軌道な若者達を拳で『更正』させる。彼等は涙を流しながら情報を差し出した。……情けは人のためならず。好きなだけ〔精神点〕を減少する。減少した値と同じ数だけ、上位リンクを得る。", "クスリ漬けの流氓を拳で『説得』。流氓はゲロと一緒に情報を吐き出した。２点のダメージ（セーブ不可）を受け、好きなタグの上位リンクを１つ得る。", "次から次へと糞どもがやってくる。コストを消費せずに上位リンクを３つ得る。", "自称『善良な一市民』からの情報リークを受ける。オマエの持っている異能の数だけ上位リンクを得る。……罠か！？", "サウナ風呂でくつろぐヤクザから情報収集。ヤクザは歯の折れた口から、弱々しい呻きと共に情報を吐き出した。好きなだけダメージを受ける（セーブ不可）。好きなタグの受けたダメージと同じ値のSLへリンクを１つ得る。", "ゼロ・トレランスオンスロートなラブ＆ウォー。2D6を振り、その値が現在の〔肉体点〕以上であれば、情報をゲット！", "お前達を狙う刺客が冥土の土産に教えてくれる。お前自身かチームの仲間、お前の恋人のいずれかの〔肉体点〕を０点にすれば、情報をゲットできる。", "お前の宿敵（データはブラックアドレス）が1D6体現れる。血戦によって相手を倒せば、情報ゲット。"];}
      else if (/CrimeIHT/i['$===']($case)) {
      name = "情報ハプニング表／〔犯罪〕:";
      table = ["謎の情報屋チュンさん登場。ターゲットとなる情報を渡し、いずこかへ去る。情報ゲット！", "警官からの職務質問。一晩拘留される。臭い飯表（p.70）を１回振ること", "だますつもりがだまされる。〔サイフ〕を１点消費", "気のゆるみによる駐車違反。持っている乗物が無くなってしまう", "超えてはならない一線を越える。トラウマを１点受ける", "そのトピックを取りしきる盟約に目をつけられる。このトピックと同じタグのトピックからはリンクをはれなくなる", "過去の亡霊がきみを襲う。自分の修得している異能の中から好きな１つを選ぶ。このセッションでは、その異能が使用不可になる", "敵対する盟約のいざこざに巻き込まれる。〔肉体点〕に1D6点のセーブ不可なダメージを受ける", "スリにあう。〔通常装備〕からランダムにアイテムを１個選び、それを無くす", "敵対する盟約からの妨害工作。この情報は情報収集のルールを使って手に入れることはできなくなる", "頼れる協力者のもとへ行くと、彼（彼女）の無惨な姿が……自分の持っている現在のセッションに参加していないキャラクター１体を選び、〔肉体点〕を０にする。そして、致命傷表(p.61）を振ること"];}
      else if (/LifeIHT/i['$===']($case)) {
      name = "情報ハプニング表／〔生活〕:";
      table = ["謎の情報屋チュンさん登場。ターゲットとなる情報を渡し、いずこかへ去る。情報ゲット！", "経理の整理に没頭。この日の行動をすべてそれに費やさない限り、このセッションでは買物を行えなくなる", "壮大なる無駄使い。〔サイフ〕を１点消費", "「当たり屋(p.124）」が【追跡】を開始", "留守の間に空き巣が！　〔アジト装備〕からランダムにアイテムが１個無くなる", "「押し売り(p.124）」が【追跡】を開始", "新たな風を感じる。自分の好きな〔趣味〕１つをランダムに変更すること", "貧乏ひまなし。［1D6－自分の〔生活〕］ターンの間、行動できなくなる", "留守の間にアジトが火事に！　〔アジト装備〕がすべて無くなる。明日からどうしよう？", "頼りにしていた有力者が失脚する。しわ寄せがこっちにもきて、〔生活〕が１点減少する", "覚えのない借金の返済を迫られる。〔サイフ〕を1D6点減らす。〔サイフ〕が足りない場合、そのセッション終了時までに不足分を支払わないと【借金大王】(p.119）の代償を得る"];}
      else if (/LoveIHT/i['$===']($case)) {
      name = "情報ハプニング表／〔恋愛〕:";
      table = ["謎の情報屋チュンさん登場。ターゲットとなる情報を渡し、いずこかへ去る。情報ゲット！", "一晩を楽しむが相手はちょっと特殊な趣味だった。アブノーマルの趣味を持っていない限り、トラウマを１点受ける。この日はもう行動できない", "一晩を楽しむが相手はちょっと特殊な趣味だった。【両刀使い】の異能を持っていない限り、トラウマを１点受ける。この日はもう行動できない", "一晩を楽しむが相手は年齢を10偽っていた。ロマンス判定のファンブル表を振ること", "すてきな人を見かけ、一目惚れ。DDが選んだNPC１体のトリコになる", "「痴漢・痴女(p.124）」が【追跡】を開始", "手を出した相手が有力者の女（ヒモ）だった。手下どもに袋叩きに会い、1D6点のダメージを受ける（セーブ不可）", "突然の別れ。トリコ欄からランダムに１体を選び、その名前を消す", "乱れた性生活に疲れる。〔肉体点〕と〔精神点〕がともに２点減少する", "性病が伝染る。１日以内に病院に行き、治療（価格４）を行わないと、鼻がもげる。鼻がもげると〔恋愛〕が１点減少する", "生命の神秘。子供ができる"];}
      else if (/CultureIHT/i['$===']($case)) {
      name = "情報ハプニング表／〔教養〕:";
      table = ["謎の情報屋チュンさん登場。ターゲットとなる情報を渡し、いずこかへ去る。情報ゲット！", "アヤシイ書物を読み、一時的発狂。この日はもう行動できない。トラウマを１点受ける", "天才ゆえの憂鬱。自分の〔教養〕と同じ値だけ、〔精神点〕を減少させる", "唐突に睡魔が。次から２ターンの間、睡眠しなくてはならない", "間違いメールから恋が始まる。ハンドルしか知らない「女子高生（p.122）」に偽装した「殺人鬼（p.137）」と恋人（お互いのトリコ）の関係になる", "「勧誘員(p.124）」が【追跡】を開始", "OSの不調。徹夜で再インストール。この日はもう行動できない上、「無理」をしてしまう", "場を荒らしてしまう。このトピックと同じタグのトピックからはリンクをはれなくなる", "ボケる。〔教養〕が１点減少する", "クラッキングに遭う。いままで調べていたトピックとリンクをすべて失う", "ネットサーフィンにハマってしまい、ついつい時間が過ぎる。毎ターンのはじめに〔性業値〕判定を行い、律にならないとそのターンは行動できない。この効果は１日続く"];}
      else if (/CombatIHT/i['$===']($case)) {
      name = "情報ハプニング表／〔戦闘〕:";
      table = ["謎の情報屋チュンさん登場。ターゲットとなる情報を渡し、いずこかへ去る。情報ゲット！", "悪を憎む心に支配され、一匹の修羅と化す。キジルシの代償から１種類を選び、このセッションの間、習得すること。修得できるキジルシの代償がなければ、あなたはNPCとなる。", "自宅に帰ると、無惨に破壊された君のおたからが転がっていた。「この件から手を引け」という書き置きと共に……。この情報フェイズでは、リンク判定を行ったトピックのタグの〔趣味〕を修得していた場合、それを未修得にする。また、おたからを持っていたなら、このセッション中、そのおたからは利用できなくなる。", "「俺にはもっと別の人生があったんじゃないだろうか……！？」突如、空しさがこみ上げて来る……その日は各ターンの始めに〔性業値〕判定を行う。失敗すると、酒に溺れ、そのターンは行動済みになる。", "クライムファイター仲間からスパイの容疑を受ける……１点のトラウマを追う。", "自宅の扉にメモが……！！　「今ならまだ間に合う」奴等はどこまで知っているんだ！？　このトピックからは、これ以上リンクを伸ばせなくなる。", "大幇とコンビナートの抗争に何故か巻き込まれる。……なんとか生還するが、次のターンの最後まで行動できず、1D6点のダメージを受ける（セーブ不可）", "地獄組の鉄砲玉が君に襲い掛かってきた！！　〔戦闘〕で難易度９の判定に失敗すると、〔肉体点〕が０になる。", "「お前はやり過ぎた」の書きおきと共に、友人の死体が発見される〔戦闘〕で難易度９の判定を行う。失敗すると、ランダムに選んだチームの仲間１人が死亡する。", "宿敵によって深い疵を受ける。自分の修得している異能の中から、１つ選ぶこと。このセッションのあいだ、その異能を使用することができなくなる。", "流氓の男の卑劣な罠にかかり、肥え喰らいの巣に落ちる！！　「掃き溜めの悪魔」1D6体と血戦を行う。戦いに勝たない限り、生きて帰ることはできないだろう……。もちろん血戦に勝ったところで情報は得られない。"];}
      else if (/G(eneral)?A(ccident)?T/i['$===']($case)) {
      name = "汎用アクシデント表:";
      table = ["痛恨のミス。激しく状況が悪化する。以降のケチャップに関する行為判定の難易度に＋１の修正がつき、あなたが追う側なら逃げる側のコマを２マス進める（逃げる側なら自分を２マス戻す）", "最悪の大事故。ケチャップどころではない！　〔犯罪〕で難易度９の判定を行う。失敗したら、ムーブ判定を行ったキャラクターは3D6点のダメージを受け、ケチャップから脱落する。判定に成功すればギリギリ難を逃れる。特に何もなし。", "もうダメだ……。絶望感が襲いかかってくる。後３ラウンド以内にケリをつけないと、あなたが追う側なら自動的に逃げる側が勝利する（逃げる側なら追う側が勝利する）", "まずい、突発事故だ！　ムーブ判定を行ったキャラクターは、1D6点のダメージを受ける。", "一瞬ひやりと緊張が走る。　ムーブ判定を行ったキャラクターは、〔精神点〕を２点減少する。", "スランプ！　思わず足踏みしてしまう。ムーブ判定を行った者は、ムーブ判定に使用した能力値を使って難易度７の判定を行うこと。失敗したら、ムーブ判定を行ったキャラクターは、ケチャップから脱落。成功しても、あなたが追う側なら逃げる側のコマを１マス進める（逃げる側なら自分を１マス戻す）", "イマイチ集中できない。〔性業値〕判定を行うこと。「激」になると、思わず見とれてしまう。あなたが追う側なら逃げる側のコマを１マス進める（逃げる側なら自分を１マス戻す）", "古傷が痛み出す。以降のケチャップに関する行為判定に修正が＋１つく", "うっかり持ち物を見失う。〔通常装備〕欄からアイテムを１個選んで消す", "苦しい状態に追い込まれた。ムーブ判定を行ったキャラクターは、今後のムーブ判定で成功度が－１される。", "頭の中が真っ白になる。〔精神点〕を1D6減少する。"];}
      else if (/R(omance)?F(umble)?T/i['$===']($case)) {
      name = "ロマンスファンブル表:";
      table = ["みんなあいそをつかす。自分のトリコ欄のキャラクターの名前をすべて消すこと", "痴漢として通報される。〔犯罪〕の難易度９の判定に成功しない限り、1D6ターン後に検挙されてしまう", "へんにつきまとわれる。対象は、トリコになるが、ファンブル表の結果やトリコと分かれる判定に成功しない限り、常備化しなくてもトリコ欄から消えることはない", "修羅場！　対象とは別にトリコを所有していれば、そのキャラクターが現れ、あなたと対象に血戦をしかけてくる", "恋に疲れる。自分の〔精神点〕が1D6点減少する", "甘い罠。あなたが対象のトリコになってしまう", "平手うち！　自分の〔肉体点〕が1D6点減少する", "浮気がばれる。恋人関係にあるトリコがいれば、そのキャラクターの名前をあなたのトリコ欄から消す", "無礼な失言をしてしまう。対象はあなたに対し「憎悪（p.120参照）」の反応を抱き、あなたはその対象の名前を書き込んだ【仇敵】の代償を得る", "ショックな一言。トラウマを１点受ける", "トリコからの監視！　このセッションの間、ロマンス判定のファンブル率が自分のトリコの所持数と同じだけ上昇する"];}
      else if (/FumbleT/i['$===']($case)) {
      name = "命中判定ファンブル表:";
      table = ["自分の持ち物がすっぽぬけ、偶然敵を直撃！　持っているアイテムを１つ消し、ジオラマ上にいるキャラクター１人をランダムに選ぶ。そのキャラクターの〔肉体点〕を1D6ラウンドの間０点にし、行動不能にさせる（致命傷表は使用しない）。1D6ラウンドが経過し、行動不能から回復すると、そのキャラクターの〔肉体点〕は、行動不能になる直前の値にまで回復する", "敵の増援！　「三下(p.125）」が1D6体現れて、自分たちに襲いかかってくる（DDは、この処理が面倒だと思ったら、ファンブルしたキャラクターの〔肉体点〕を1D6点減少させてもよい）", "お前のいるマスに「障害物」が出現！　そのマスに障害物オブジェクトを置き、そのマスにいたキャラクターは全員２ダメージを受ける（セーブ不可）", "射撃武器を使っていれば、弾切れを起こす。準備行動を行わないとその武器はもう使えない", "転んでしまう。準備行動を行わないと移動フェイズに行動できず、格闘、射撃、突撃攻撃が行えない", "急に命が惜しくなる。性業値判定をすること。「激」なら戦闘を続行。「律」なら次のラウンドから全力移動を行い、ジオラマから逃走を試みる。「迷」なら次のラウンドは移動・攻撃フェイズに行動できない", "誤って別の目標を攻撃。目標以外であなたに一番近いキャラクターに４ダメージ（セーブ不可）！", "誤って自分を攻撃。３ダメージ（セーブ不可）！", "今使っている武器が壊れる。アイテム欄から使用中の武器を消すこと。銃器を使っていた場合、暴発して自分に６ダメージ！　武器なしの場合、体を傷つけ３ダメージ（共にセーブ不可）！", "「制服警官(p.129）」が１人現れる。その場にいるキャラクターをランダムに攻撃する", "最悪の事態。〔肉体点〕を０にして、そのキャラクターは行動不能に（致命傷表は使用しない）"];}
      else if (/FatalT/i['$===']($case)) {
      name = "致命傷表:";
      table = ["死亡。", "死亡。", "昏睡して行動不能。1D6ラウンド以内に治療し、〔肉体点〕を１以上にしないと死亡。", "昏睡して行動不能。1D6ターン以内に治療し、〔肉体点〕を１以上にしないと死亡。", "大怪我で行動不能。体の部位のどこかを欠損してしまう。任意の〔能力値〕１つが１点減少。", "大怪我で行動不能。1D6ターン以内に治療し、〔肉体点〕を１以上にしないと体の部位のどこかを欠損してしまう。任意の〔能力値〕１つが１点減少。", "気絶して行動不能。〔肉体点〕の回復には治療が必要。", "気絶して行動不能。１ターン後、〔肉体点〕が１になる。", "気絶して行動不能。1D6ラウンド後、〔肉体点〕が１になる。", "気絶して行動不能。1D6ラウンド後、〔肉体点〕が1D6回復する。", "奇跡的に無傷。さきほどのダメージを無効に。"];}
      else if (/AccidentT/i['$===']($case)) {
      name = "アクシデント表:";
      table = ["ゴミか何かが降ってきて、視界を塞ぐ。以降のケチャップに関する判定に修正が＋１つく。あなたが追う側なら逃げる側のコマを２マス進める（逃げる側なら自分を２マス戻す）", "対向車線の車（もしくは他の船、飛行機）に激突しそうになる。運転手は難易度９の〔精神〕の判定を行うこと。失敗したら、乗物と乗組員全員は3D6のダメージを受けた上に、ケチャップから脱落", "ヤバイ、ガソリンがもうない！　後３ラウンド以内にケリをつけないと逃げられ（追いつかれ）ちまう", "露店や消火栓につっこむ。その乗物に1D6ダメージ", "一瞬ひやりと緊張が走る。〔精神点〕を２点減らす", "何かの障害物に衝突する。運転手は難易度７の〔精神〕の判定を行うこと。失敗したら、乗物と乗組員全員は2D6ダメージを受けた上に、ケチャップから脱落。成功しても、あなたが追う側なら逃げる側のコマを１マス進める（逃げる側なら自分を１マス戻す）", "走ってる途中に〔趣味〕に関する何かが目に映る。性業値判定を行うこと。「激」になると思わず見とれてしまう。あなたが追う側なら逃げる側のコマを１マス進める（逃げる側なら自分を１マス戻す）", "軽い故障が起きちまった。以降のケチャップに関する行為判定に修正が＋１つく", "うっかり落し物。〔通常装備〕欄からアイテムを１個選んで消す", "あやうく人にぶつかりそうになる。運転手は難易度９の〔精神〕の判定を行う。失敗したら、その一般人を殺してしまう。あなたが追う側なら逃げる側のコマを１マス進める（逃げる側なら自分を１マス戻す）", "信号を無視しちまったら後ろで事故が起きた。警察のサイレンが鳴り響いてくる。DDはケチャップの最後尾に警察の乗物を加えろ。データは「制服警官（p.129）」のものを使用"];}
      else if (/AfterT/i['$===']($case)) {
      name = "その後表:";
      table = ["ここらが潮時かもしれない。2D6を振り、その目が自分の修得している代償未満であれば、そのキャラクターは引退し、二度と使用できない", "苦労の数だけ喜びもある。2D6を振り、自分の代償の数以下の目を出した場合、経験点が追加で１点もらえる", "妙な恨みを買ってしまった。【仇敵】（p.95）を修得する。誰が【仇敵】になるかは、DDが今回登場したNPCの中から１人を選ぶ", "大物の覚えがめでたい。今回のセッションに登場した盟約へ入るための条件を満たしていれば、その盟約に経験点の消費なしで入ることができる", "思わず意気投合。今回登場したNPC１人を選び、そのキャラクターとの【コネ】（p.95）を修得する", "今回の事件で様々な教訓を得る。自分の修得しているアドバンスドカルマの中から、汎用以外のものを好きなだけ選ぶ。そのカルマの異能と代償を、別な異能と代償に変更することができる", "深まるチームの絆。今回のセッションでミッションが成功していた場合、【絆】（p.95）を修得する", "色々な運命を感じる。今回のセッションでトリコができていた場合、経験点の消費なしにそのトリコを常備化することができる。また、自分が誰かのトリコになっていた場合、その人物への【トリコ】(p.95）の代償を得る", "やっぱり亜侠も楽じゃないかも。今回のセッションで何かツラい目にあっていた場合、【日常】（p.95）を取得する", "くそっ！　ここから出せ！！　今回のセッションで逮捕されていたら、【前科】(p.95）の代償を得る", "〔性業値〕が１以下、もしくは１３以上だった場合、そのキャラクターは大阪の闇に消える。そのキャラクターは引退し、二度と使用できない"];}
      else if (/KusaiMT/i['$===']($case)) {
      name = "臭い飯表:";
      table = ["やあ署長、ご苦労さん。いつでも好きなときに留置所を出ることができる。", "軽い取り調べを受ける。次の１ターンが終了するまで、未行動にならない。", "荒っぽい取り調べを受ける。次の１ターンが終了するまで、未行動にならない。１ターン休み。1D6ダメージを受ける（セーブ不可）。", "一晩泊まっていきなさい。次の日の朝まで未行動にならない。", "粘り強い取り調べが続く。1D6日後の朝まで未行動にならない。", "留置所のトイレで陵辱を受ける。1D6日後の朝まで未行動にならない。トラウマを１点受ける。", "劣悪な環境のせいで伝染病にかかる。1D6日後の朝まで未行動にならない。【病弱】の代償を得る。", "精神異常を訴え、無罪に。しかし、アーカム・アサイレムに移送され、1D6回別のキャラクターでセッションを行うまで、そのキャラクターを使用できない。キジルシの代償の中から、ランダムに１つの代償を得る。", "起訴されて有罪に。海上刑務所行き。1D6回別のキャラクターでセッションを行うまで、そのキャラクターを使用できない。【前科】の代償を得る。", "起訴されて有罪に。海上刑務所行き。2D6回別のキャラクターでセッションを行うまで、そのキャラクターを使用できない。【前科】の代償を得る。", "起訴されて有罪に。海上刑務所行き。終身刑。そのキャラクターは引退する。"];}
      else if (/EnterT/i['$===']($case)) {
      name = "登場表:";
      table = ["「こっから先にはいかせないぜ」　【仇敵】がいれば現われ、血戦が始まる。現在の血戦、もしくはケチャップが終了したら、処理を行うこと。", "「待たせたな、みんな！」　ジオラマの好きな場所に自分のキャラクターを配置する。", "おっと、鉢合わせ。ランダムにジオラマ上の敵を１体選ぶ。選んだ敵と同じマスに、そのキャラクターを配置する。", "全力ダッシュで駆けつける！　〔肉体点〕を1D6点消費すれば、ジオラマの好きな場所に自分のキャラクターを配置する。そうでなければ、登場できない。", "裏道を歩いていたら、偶然その場所にでくわした。DDはジオラマの好きな場所にそのキャラクターを配置する。", "「キキィー！」　もしもそのキャラクターが乗物を装備していれば、DDはジオラマの好きな場所にそのキャラクターを配置する。そうでなければ、登場できない。", "……間に合ったみたいだな。仲間を１人選び、そのキャラクターと同じマスに自分のキャラクターを配置する。", "ラッキー、「ジャリ銭」を拾った。……と、そんな場合じゃないよな。", "をっと、お前の好物だ。〔性業値〕判定を行え。「律」ならもう一回、登場表を振ることができる。それ以外なら、キャラクターを配置できない。", "んー。ここは一度通ったような。疲労から〔精神点〕を2点減少。", "くあー。完全に道に迷っちまった。この実行フェイズには登場できない。"];}
      else if (/BudTT/i['$===']($case)) {
      name = "バッドトリップ表:";
      table = ["自分の身の周りにいる人たちが異様な何か(悪魔、宇宙人、ゾンビ、お前と同じ顔をした誰か…)に変貌し襲い掛かってくる。お前はNPCとなって、同じ場所にいる誰かに血戦をしかける。血戦が終了すれば（そして生きていれば）、視界は元に戻っている。", "世界は一つ。オープンソース。愛で結びつくべきなんだ。お前は自分の知っていることをペラペラと話だし、1D6ターンの間、聞かれれば知っていることを何でも話してしまう。", "自分と他人の区別がつかなくなり、現実感が薄れる。〔精神点〕を1D6点減少する。", "誰かが自分を殺そうと企んでいるような錯覚を覚える。1D6ターンの間、ペテン師の代償【疑心暗鬼】を修得する。", "風景が極彩色に彩られる！もっと……もっと極彩色に！もし他にも「麻薬」カテゴリのアイテムを持っていれば、その中の１個を使用する（行動は使わない）。", "目の前にいる人物が非常にいとおしく思えてくる。同じ場所にいるキャラクターの中からランダムに１人選ぶ。1D6ターンの間、そのキャラクターのトリコになる。", "魅力的な裸の異性が、あなたの目の前で誘惑する幻覚を見る。〔性業値〕判定を行う。「激」になると服を脱ぎだす。もしも外にいればそのエリアの〔治安〕の難易度の〔犯罪〕判定を行う。失敗すると「臭い飯」表を振る。", "お前は痛みを感じなくなる。1D6ターンの間、〔肉体点〕の重症のペナルティが無効化される。", "自分の持っているものから触手が生え、あなたにからみつく。自分の〔通常装備〕欄のアイテムの中からランダムに１種を選ぶ。それを捨てる。", "皮膚の中を無数の蟲が蠢いているのを感じる。〔肉体点〕を３点減少する。", "神々しい声が聞こえてくる。1D6ターンの間、自分の好きな能力値を１点上昇することができる。"];}
      else if (/GetgT/i['$===']($case)) {
      name = "報酬・ガラクタ表:";
      table = ["持ち主の〔生活〕と等しい個数の《食事》（基本80p、小道具・日用品）", "持ち主の〔生活〕と等しい個数の《トルエン》（基本79p、小道具・麻薬）", "持ち主の〔生活〕と等しい個数の《ジャリ銭》（基本78p、小道具・お金）", "壊れた実用品。実用品表で決定。（壊れたアイテムは、１ターン使用し〔教養〕で難易度９の判定に使用すると直せる）", "《テレカ》（基本78p、小道具・通信手段）", "何もなかった（涙）。残念でした。", "《ロープ》（基本78p、小道具・保安器具）", "《トヨトミピストル》（基本74p、武器）", "《自転車》（基本76p、乗物）", "《ふとん》（基本79p、小道具・日用品）", "持ち主の〔趣味〕からランダムに１種類選ぶ。その趣味おたからを１個ランダムに選ぶ。"];}
      else if (/GetzT/i['$===']($case)) {
      name = "報酬・実用品表:";
      table = ["持ち主と同じタイプの汎用おたから（基本82p、汎用おたから）", "価格５の《ホテル》の使用券（基本80p、小道具・サービス）", "《苦力》（基本80p、小道具・手下）", "《カメラ》（基本80p、小道具・手下）", "持ち主が使っていた装備（ただし、一般アイテムに存在しない装備をＰＣは使用できない）", "持ち主の〔生活〕と等しい個数の《札巻》（基本78p、小道具・お金）", "持ち主の〔生活〕と等しい個数の《大麻》（基本79p、小道具・麻薬）", "《ノートパソコン》と《携帯電話》（基本78p、79p、小道具・日用品、通信手段）", "《ヴェスパ》（基本76p、乗物）", "《救急箱》（基本79p、小道具・保安器具）", "《札束》（基本78p、小道具・お金）"];}
      else if (/GetnT/i['$===']($case)) {
      name = "報酬・値打ち物表:";
      table = ["社会的身分。【日常】の異能を手に入れる。", "《人柱》（基本184p、盟約おたから・沙京流氓）", "貴重な貴金属。１ターン使って〔生活〕で難易度９の判定に成功すれば《トランク》と交換できる。", "持ち主と同じタイプの汎用おたから（基本82p、汎用おたから）", "持ち主の〔生活〕と等しい個数の《ヘロイン》（基本79p、小道具・麻薬）", "持ち主の〔生活〕と等しい個数の《札束》（基本78p、小道具・お金）", "持ち主の〔生活〕と等しい個数の価格５以下の武器（基本79p、小道具・麻薬）", "《ロールスロイス》（基本76p、乗物）", "持ち主の〔趣味〕からランダムに１種類選ぶ。その趣味おたからを１個ランダムに選ぶ。", "《トランク》（基本78p、小道具・お金）", "《宝箱》（基本78p、小道具・お金）"];}
      else if (/GetkT/i['$===']($case)) {
      name = "報酬・奇天烈表:";
      table = ["好きな盟約おたから１個（プレイヤー全員で相談して決定）", "《気球》（基本76p、乗物）", "《チェインソー》（基本74p、武器）", "誰かから感謝される。それだけ？", "持ち主の〔趣味〕からランダムに１種類選ぶ。その趣味おたからを１個ランダムに選ぶ。", "何もなかった（涙）。残念でした。", "持ち主と同じタイプの汎用おたから（基本82p、汎用おたから）", "《フォークリフト》（基本76p、乗物）", "《RPG-7》（基本74p、武器）", "倒されたキャラクターは、致命傷表を振り、まだ生きていれば、そのキャラクターを倒した者のトリコになる。", "「先にイッてるぜ」そのキャラクター１体を倒した者に経験点が１点与えられる。"];};
      return [name, table];
    }, TMP_Satasupe_get2d6TableInfo_23.$$arity = 1), nil) && 'get2d6TableInfo';
  })($nesting[0], Opal.const_get_relative($nesting, 'DiceBot'), $nesting)
})(Opal);

/* Generated by Opal 0.11.4 */
(function(Opal) {
  var self = Opal.top, $nesting = [], nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

  Opal.add_stubs(['$exit']);
  return Opal.const_get_relative($nesting, 'Kernel').$exit()
})(Opal);
