/* Generated by Opal 0.11.4 */
(function(Opal) {
  function $rb_ge(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);
  }
  function $rb_times(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);
  }
  var self = Opal.top, $nesting = [], nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send, $gvars = Opal.gvars, $truthy = Opal.truthy;

  Opal.add_stubs(['$==', '$>=', '$debug', '$!=', '$*']);
  return (function($base, $super, $parent_nesting) {
    function $TokumeiTenkousei(){};
    var self = $TokumeiTenkousei = $klass($base, $super, 'TokumeiTenkousei', $TokumeiTenkousei);

    var def = self.$$proto, $nesting = [self].concat($parent_nesting), TMP_TokumeiTenkousei_initialize_1, TMP_TokumeiTenkousei_gameName_2, TMP_TokumeiTenkousei_gameType_3, TMP_TokumeiTenkousei_getHelpMessage_4, TMP_TokumeiTenkousei_check_nD6_5, TMP_TokumeiTenkousei_getDiceRolledAdditionalText_6;

    
    
    Opal.defn(self, '$initialize', TMP_TokumeiTenkousei_initialize_1 = function $$initialize() {
      var self = this, $iter = TMP_TokumeiTenkousei_initialize_1.$$p, $yield = $iter || nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;

      if ($iter) TMP_TokumeiTenkousei_initialize_1.$$p = null;
      // Prepare super implicit arguments
      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {
        $zuper[$zuper_i] = arguments[$zuper_i];
      }
      
      $send(self, Opal.find_super_dispatcher(self, 'initialize', TMP_TokumeiTenkousei_initialize_1, false), $zuper, $iter);
      self.sendMode = 2;
      self.sortType = 1;
      self.sameDiceRerollCount = 1;
      return (self.sameDiceRerollType = 2);
    }, TMP_TokumeiTenkousei_initialize_1.$$arity = 0);
    
    Opal.defn(self, '$gameName', TMP_TokumeiTenkousei_gameName_2 = function $$gameName() {
      var self = this;

      return "特命転攻生"
    }, TMP_TokumeiTenkousei_gameName_2.$$arity = 0);
    
    Opal.defn(self, '$gameType', TMP_TokumeiTenkousei_gameType_3 = function $$gameType() {
      var self = this;

      return "TokumeiTenkousei"
    }, TMP_TokumeiTenkousei_gameType_3.$$arity = 0);
    
    Opal.defn(self, '$getHelpMessage', TMP_TokumeiTenkousei_getHelpMessage_4 = function $$getHelpMessage() {
      var self = this;

      return "「1の出目でEPP獲得」、判定時の「成功」「失敗」「ゾロ目で自動振り足し」を判定。\n"
    }, TMP_TokumeiTenkousei_getHelpMessage_4.$$arity = 0);
    
    Opal.defn(self, '$check_nD6', TMP_TokumeiTenkousei_check_nD6_5 = function $$check_nD6(total_n, _dice_n, _signOfInequality, diff, _dice_cnt, _dice_max, _n1, _n_max) {
      var self = this;
      if ($gvars.signOfInequality == null) $gvars.signOfInequality = nil;

      
      if ($gvars.signOfInequality['$=='](">=")) {
        } else {
        return ""
      };
      if (diff['$==']("?")) {
        return ""};
      if ($truthy($rb_ge(total_n, diff))) {
        return " ＞ 成功"
        } else {
        return " ＞ 失敗"
      };
    }, TMP_TokumeiTenkousei_check_nD6_5.$$arity = 8);
    return (Opal.defn(self, '$getDiceRolledAdditionalText', TMP_TokumeiTenkousei_getDiceRolledAdditionalText_6 = function $$getDiceRolledAdditionalText(n1, _n_max, dice_max) {
      var $a, self = this, point = nil;

      
      self.$debug("getExtraPowerPointTextForTokumeiTenkousei n1, dice_max", n1, dice_max);
      if ($truthy(($truthy($a = n1['$!='](0)) ? dice_max['$=='](6) : $a))) {
        
        point = $rb_times(n1, 5);
        return "" + " ＞ " + (point) + "EPP獲得";};
      return "";
    }, TMP_TokumeiTenkousei_getDiceRolledAdditionalText_6.$$arity = 3), nil) && 'getDiceRolledAdditionalText';
  })($nesting[0], Opal.const_get_relative($nesting, 'DiceBot'), $nesting)
})(Opal);

/* Generated by Opal 0.11.4 */
(function(Opal) {
  var self = Opal.top, $nesting = [], nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

  Opal.add_stubs(['$exit']);
  return Opal.const_get_relative($nesting, 'Kernel').$exit()
})(Opal);
