/* Generated by Opal 1.0.3 */
(function(Opal) {
  function $rb_le(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);
  }
  function $rb_ge(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);
  }
  function $rb_plus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);
  }
  function $rb_divide(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);
  }
  function $rb_lt(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);
  }
  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;

  Opal.add_stubs(['$==', '$<=', '$>=', '$+', '$/', '$<']);
  return (function($base, $super, $parent_nesting) {
    var self = $klass($base, $super, 'Elric');

    var $nesting = [self].concat($parent_nesting), $Elric_check_1D100$1;

    
    Opal.const_set($nesting[0], 'ID', "Elric!");
    Opal.const_set($nesting[0], 'NAME', "エルリック！");
    Opal.const_set($nesting[0], 'SORT_KEY', "えるりつく");
    Opal.const_set($nesting[0], 'HELP_MESSAGE', "貫通、クリティカル、ファンブルの自動判定を行います。\n");
    return (Opal.def(self, '$check_1D100', $Elric_check_1D100$1 = function $$check_1D100(total, _dice_total, cmp_op, target) {
      var $a, self = this;

      
      if (cmp_op['$==']("<=")) {
      } else {
        return ""
      };
      if ($truthy($rb_le(total, 1))) {
        return " ＞ 貫通"};
      if ($truthy($rb_ge(total, 100))) {
        return " ＞ 致命的失敗"};
      if ($truthy($rb_le(total, $rb_plus($rb_divide(target, 5), 0.9)))) {
        return " ＞ 決定的成功"};
      if ($truthy($rb_le(total, target))) {
        return " ＞ 成功"};
      if ($truthy(($truthy($a = $rb_ge(total, 99)) ? $rb_lt(target, 100) : $a))) {
        return " ＞ 致命的失敗"};
      return " ＞ 失敗";
    }, $Elric_check_1D100$1.$$arity = 4), nil) && 'check_1D100';
  })($nesting[0], $$($nesting, 'DiceBot'), $nesting)
})(Opal);
