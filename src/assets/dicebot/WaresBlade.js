/* Generated by Opal 0.11.4 */
(function(Opal) {
  function $rb_times(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);
  }
  function $rb_ge(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);
  }
  var self = Opal.top, $nesting = [], nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy;

  Opal.add_stubs(['$==', '$*', '$>=']);
  return (function($base, $super, $parent_nesting) {
    function $WaresBlade(){};
    var self = $WaresBlade = $klass($base, $super, 'WaresBlade', $WaresBlade);

    var def = self.$$proto, $nesting = [self].concat($parent_nesting), TMP_WaresBlade_initialize_1, TMP_WaresBlade_gameName_2, TMP_WaresBlade_gameType_3, TMP_WaresBlade_getHelpMessage_4, TMP_WaresBlade_check_nD10_5;

    
    
    Opal.defn(self, '$initialize', TMP_WaresBlade_initialize_1 = function $$initialize() {
      var self = this, $iter = TMP_WaresBlade_initialize_1.$$p, $yield = $iter || nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;

      if ($iter) TMP_WaresBlade_initialize_1.$$p = null;
      // Prepare super implicit arguments
      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {
        $zuper[$zuper_i] = arguments[$zuper_i];
      }
      return $send(self, Opal.find_super_dispatcher(self, 'initialize', TMP_WaresBlade_initialize_1, false), $zuper, $iter)
    }, TMP_WaresBlade_initialize_1.$$arity = 0);
    
    Opal.defn(self, '$gameName', TMP_WaresBlade_gameName_2 = function $$gameName() {
      var self = this;

      return "ワースブレイド"
    }, TMP_WaresBlade_gameName_2.$$arity = 0);
    
    Opal.defn(self, '$gameType', TMP_WaresBlade_gameType_3 = function $$gameType() {
      var self = this;

      return "WaresBlade"
    }, TMP_WaresBlade_gameType_3.$$arity = 0);
    
    Opal.defn(self, '$getHelpMessage', TMP_WaresBlade_getHelpMessage_4 = function $$getHelpMessage() {
      var self = this;

      return "nD10>=m 方式の判定で成否、完全成功、完全失敗を自動判定します。\n"
    }, TMP_WaresBlade_getHelpMessage_4.$$arity = 0);
    return (Opal.defn(self, '$check_nD10', TMP_WaresBlade_check_nD10_5 = function $$check_nD10(total_n, dice_n, signOfInequality, diff, dice_cnt, _dice_max, _n1, _n_max) {
      var self = this;

      
      if (signOfInequality['$=='](">=")) {
        } else {
        return ""
      };
      if (dice_n['$==']($rb_times(10, dice_cnt))) {
        return " ＞ 完全成功"
      } else if (dice_n['$==']($rb_times(1, dice_cnt))) {
        return " ＞ 絶対失敗"
      } else if ($truthy($rb_ge(total_n, diff))) {
        return " ＞ 成功"
        } else {
        return " ＞ 失敗"
      };
    }, TMP_WaresBlade_check_nD10_5.$$arity = 8), nil) && 'check_nD10';
  })($nesting[0], Opal.const_get_relative($nesting, 'DiceBot'), $nesting)
})(Opal);

/* Generated by Opal 0.11.4 */
(function(Opal) {
  var self = Opal.top, $nesting = [], nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

  Opal.add_stubs(['$exit']);
  return Opal.const_get_relative($nesting, 'Kernel').$exit()
})(Opal);
