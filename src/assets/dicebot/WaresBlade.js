/* Generated by Opal 1.0.3 */
(function(Opal) {
  function $rb_ge(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);
  }
  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;

  Opal.add_stubs(['$==', '$count', '$size', '$>=']);
  return (function($base, $super, $parent_nesting) {
    var self = $klass($base, $super, 'WaresBlade');

    var $nesting = [self].concat($parent_nesting), $WaresBlade_check_nD10$1;

    
    Opal.const_set($nesting[0], 'ID', "WaresBlade");
    Opal.const_set($nesting[0], 'NAME', "ワースブレイド");
    Opal.const_set($nesting[0], 'SORT_KEY', "わあすふれいと");
    Opal.const_set($nesting[0], 'HELP_MESSAGE', "nD10>=m 方式の判定で成否、完全成功、完全失敗を自動判定します。\n");
    return (Opal.def(self, '$check_nD10', $WaresBlade_check_nD10$1 = function $$check_nD10(total, _dice_total, dice_list, cmp_op, target) {
      var self = this;

      
      if (cmp_op['$=='](">=")) {
      } else {
        return ""
      };
      if (dice_list.$count(10)['$=='](dice_list.$size())) {
        return " ＞ 完全成功"
      } else if (dice_list.$count(1)['$=='](dice_list.$size())) {
        return " ＞ 絶対失敗"
      } else if ($truthy($rb_ge(total, target))) {
        return " ＞ 成功"
      } else {
        return " ＞ 失敗"
      };
    }, $WaresBlade_check_nD10$1.$$arity = 5), nil) && 'check_nD10';
  })($nesting[0], $$($nesting, 'DiceBot'), $nesting)
})(Opal);
