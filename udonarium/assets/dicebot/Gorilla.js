/* Generated by Opal 0.11.4 */
(function(Opal) {
  function $rb_ge(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);
  }
  function $rb_gt(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);
  }
  var self = Opal.top, $nesting = [], nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy;

  Opal.add_stubs(['$setPrefixes', '$gsub', '$last_match', '$==', '$getDiceList', '$[]', '$>=', '$>']);
  return (function($base, $super, $parent_nesting) {
    function $Gorilla(){};
    var self = $Gorilla = $klass($base, $super, 'Gorilla', $Gorilla);

    var def = self.$$proto, $nesting = [self].concat($parent_nesting), TMP_Gorilla_initialize_1, TMP_Gorilla_gameName_2, TMP_Gorilla_gameType_3, TMP_Gorilla_getHelpMessage_4, TMP_Gorilla_isGetOriginalMessage_5, TMP_Gorilla_changeText_7, TMP_Gorilla_check_2D6_8;

    
    self.$setPrefixes(["G.*"]);
    
    Opal.defn(self, '$initialize', TMP_Gorilla_initialize_1 = function $$initialize() {
      var self = this, $iter = TMP_Gorilla_initialize_1.$$p, $yield = $iter || nil;

      if ($iter) TMP_Gorilla_initialize_1.$$p = null;
      return $send(self, Opal.find_super_dispatcher(self, 'initialize', TMP_Gorilla_initialize_1, false), [], null)
    }, TMP_Gorilla_initialize_1.$$arity = 0);
    
    Opal.defn(self, '$gameName', TMP_Gorilla_gameName_2 = function $$gameName() {
      var self = this;

      return "ゴリラTRPG"
    }, TMP_Gorilla_gameName_2.$$arity = 0);
    
    Opal.defn(self, '$gameType', TMP_Gorilla_gameType_3 = function $$gameType() {
      var self = this;

      return "Gorilla"
    }, TMP_Gorilla_gameType_3.$$arity = 0);
    
    Opal.defn(self, '$getHelpMessage', TMP_Gorilla_getHelpMessage_4 = function $$getHelpMessage() {
      var self = this;

      return "" + "2D6ロール時のゴリティカル自動判定を行います。\n" + "\n" + "G = 2D6のショートカット\n" + "\n" + "例) G>=7 : 2D6して7以上なら成功\n"
    }, TMP_Gorilla_getHelpMessage_4.$$arity = 0);
    
    Opal.defn(self, '$isGetOriginalMessage', TMP_Gorilla_isGetOriginalMessage_5 = function $$isGetOriginalMessage() {
      var self = this;

      return false
    }, TMP_Gorilla_isGetOriginalMessage_5.$$arity = 0);
    
    Opal.defn(self, '$changeText', TMP_Gorilla_changeText_7 = function $$changeText(string) {
      var TMP_6, self = this;

      
      string = $send(string, 'gsub', [/^(S)?G/i], (TMP_6 = function(){var self = TMP_6.$$s || this;

      return "" + (Opal.const_get_relative($nesting, 'Regexp').$last_match(1)) + "2D6"}, TMP_6.$$s = self, TMP_6.$$arity = 0, TMP_6));
      return string;
    }, TMP_Gorilla_changeText_7.$$arity = 1);
    return (Opal.defn(self, '$check_2D6', TMP_Gorilla_check_2D6_8 = function $$check_2D6(totalValue, dice_n, signOfInequality, diff, _dice_cnt, _dice_max, _n1, _n_max) {
      var self = this, diceList = nil;

      
      if (dice_n['$=='](10)) {
        
        diceList = self.$getDiceList();
        if (diceList['$[]'](0)['$=='](5)) {
          return " ＞ ゴリティカル（自動的成功）"};};
      if (signOfInequality['$=='](">=")) {
        if ($truthy($rb_ge(totalValue, diff))) {
          return " ＞ 成功"}};
      if (signOfInequality['$=='](">")) {
        if ($truthy($rb_gt(totalValue, diff))) {
          return " ＞ 成功"}};
      return " ＞ 失敗";
    }, TMP_Gorilla_check_2D6_8.$$arity = 8), nil) && 'check_2D6';
  })($nesting[0], Opal.const_get_relative($nesting, 'DiceBot'), $nesting)
})(Opal);

/* Generated by Opal 0.11.4 */
(function(Opal) {
  var self = Opal.top, $nesting = [], nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

  Opal.add_stubs(['$exit']);
  return Opal.const_get_relative($nesting, 'Kernel').$exit()
})(Opal);
