/* Generated by Opal 0.11.4 */
(function(Opal) {
  var self = Opal.top, $nesting = [], nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send;

  Opal.add_stubs(['$setPrefixes']);
  return (function($base, $super, $parent_nesting) {
    function $Template(){};
    var self = $Template = $klass($base, $super, 'Template', $Template);

    var def = self.$$proto, $nesting = [self].concat($parent_nesting), TMP_Template_initialize_1, TMP_Template_gameName_2, TMP_Template_gameType_3, TMP_Template_getHelpMessage_4, TMP_Template_changeText_5, TMP_Template_rollDiceCommand_6, TMP_Template_check_2D6_7, TMP_Template_check_nD6_8, TMP_Template_check_nD10_9, TMP_Template_check_1D100_10, TMP_Template_check_1D20_11;

    
    self.$setPrefixes([]);
    
    Opal.defn(self, '$initialize', TMP_Template_initialize_1 = function $$initialize() {
      var self = this, $iter = TMP_Template_initialize_1.$$p, $yield = $iter || nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;

      if ($iter) TMP_Template_initialize_1.$$p = null;
      // Prepare super implicit arguments
      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {
        $zuper[$zuper_i] = arguments[$zuper_i];
      }
      return $send(self, Opal.find_super_dispatcher(self, 'initialize', TMP_Template_initialize_1, false), $zuper, $iter)
    }, TMP_Template_initialize_1.$$arity = 0);
    
    Opal.defn(self, '$gameName', TMP_Template_gameName_2 = function $$gameName() {
      var self = this;

      return "ゲーム名"
    }, TMP_Template_gameName_2.$$arity = 0);
    
    Opal.defn(self, '$gameType', TMP_Template_gameType_3 = function $$gameType() {
      var self = this;

      return "GameType"
    }, TMP_Template_gameType_3.$$arity = 0);
    
    Opal.defn(self, '$getHelpMessage', TMP_Template_getHelpMessage_4 = function $$getHelpMessage() {
      var self = this;

      return "" + "ヘルプメッセージ\n" + "ダイスボットの使い方をここに記述します。\n"
    }, TMP_Template_getHelpMessage_4.$$arity = 0);
    
    Opal.defn(self, '$changeText', TMP_Template_changeText_5 = function $$changeText(string) {
      var self = this;

      return string
    }, TMP_Template_changeText_5.$$arity = 1);
    
    Opal.defn(self, '$rollDiceCommand', TMP_Template_rollDiceCommand_6 = function $$rollDiceCommand(_command) {
      var self = this;

      return ""
    }, TMP_Template_rollDiceCommand_6.$$arity = 1);
    
    Opal.defn(self, '$check_2D6', TMP_Template_check_2D6_7 = function $$check_2D6(_total_n, _dice_n, _signOfInequality, _diff, _dice_cnt, _dice_max, _n1, _n_max) {
      var self = this;

      return ""
    }, TMP_Template_check_2D6_7.$$arity = 8);
    
    Opal.defn(self, '$check_nD6', TMP_Template_check_nD6_8 = function $$check_nD6(_total_n, _dice_n, _signOfInequality, _diff, _dice_cnt, _dice_max, _n1, _n_max) {
      var self = this;

      return ""
    }, TMP_Template_check_nD6_8.$$arity = 8);
    
    Opal.defn(self, '$check_nD10', TMP_Template_check_nD10_9 = function $$check_nD10(_total_n, _dice_n, _signOfInequality, _diff, _dice_cnt, _dice_max, _n1, _n_max) {
      var self = this;

      return ""
    }, TMP_Template_check_nD10_9.$$arity = 8);
    
    Opal.defn(self, '$check_1D100', TMP_Template_check_1D100_10 = function $$check_1D100(_total_n, _dice_n, _signOfInequality, _diff, _dice_cnt, _dice_max, _n1, _n_max) {
      var self = this;

      return ""
    }, TMP_Template_check_1D100_10.$$arity = 8);
    return (Opal.defn(self, '$check_1D20', TMP_Template_check_1D20_11 = function $$check_1D20(_total_n, _dice_n, _signOfInequality, _diff, _dice_cnt, _dice_max, _n1, _n_max) {
      var self = this;

      return ""
    }, TMP_Template_check_1D20_11.$$arity = 8), nil) && 'check_1D20';
  })($nesting[0], Opal.const_get_relative($nesting, 'DiceBot'), $nesting)
})(Opal);

/* Generated by Opal 0.11.4 */
(function(Opal) {
  var self = Opal.top, $nesting = [], nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

  Opal.add_stubs(['$exit']);
  return Opal.const_get_relative($nesting, 'Kernel').$exit()
})(Opal);
