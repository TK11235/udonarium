/* Generated by Opal 0.11.4 */
(function(Opal) {
  function $rb_le(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);
  }
  function $rb_plus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);
  }
  var self = Opal.top, $nesting = [], nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;

  Opal.add_stubs(['$setPrefixes', '$===', '$getCrashWorldRoll', '$to_i', '$last_match', '$debug', '$!', '$roll', '$==', '$<=', '$+']);
  return (function($base, $super, $parent_nesting) {
    function $CrashWorld(){};
    var self = $CrashWorld = $klass($base, $super, 'CrashWorld', $CrashWorld);

    var def = self.$$proto, $nesting = [self].concat($parent_nesting), TMP_CrashWorld_gameType_1, TMP_CrashWorld_gameName_2, TMP_CrashWorld_getHelpMessage_3, TMP_CrashWorld_rollDiceCommand_4, TMP_CrashWorld_getCrashWorldRoll_5;

    
    self.$setPrefixes(["CW\\d+"]);
    
    Opal.defn(self, '$gameType', TMP_CrashWorld_gameType_1 = function $$gameType() {
      var self = this;

      return "CrashWorld"
    }, TMP_CrashWorld_gameType_1.$$arity = 0);
    
    Opal.defn(self, '$gameName', TMP_CrashWorld_gameName_2 = function $$gameName() {
      var self = this;

      return "墜落世界"
    }, TMP_CrashWorld_gameName_2.$$arity = 0);
    
    Opal.defn(self, '$getHelpMessage', TMP_CrashWorld_getHelpMessage_3 = function $$getHelpMessage() {
      var self = this;

      return "" + "・判定 CWn\n" + "初期目標値n (必須)\n" + "例・CW8\n"
    }, TMP_CrashWorld_getHelpMessage_3.$$arity = 0);
    
    Opal.defn(self, '$rollDiceCommand', TMP_CrashWorld_rollDiceCommand_4 = function $$rollDiceCommand(command) {
      var self = this, result = nil, $case = nil;

      
      result = nil;
      $case = command;
      if (/CW(\d+)/i['$===']($case)) {result = self.$getCrashWorldRoll(Opal.const_get_relative($nesting, 'Regexp').$last_match(1).$to_i())};
      return result;
    }, TMP_CrashWorld_rollDiceCommand_4.$$arity = 1);
    return (Opal.defn(self, '$getCrashWorldRoll', TMP_CrashWorld_getCrashWorldRoll_5 = function $$getCrashWorldRoll(target) {
      var $a, $b, $c, self = this, output = nil, isEnd = nil, successness = nil, num = nil;

      
      self.$debug("target", target);
      output = "(";
      isEnd = false;
      successness = 0;
      num = 0;
      while ($truthy(isEnd['$!']())) {
        
        $c = self.$roll(1, 12), $b = Opal.to_ary($c), (num = ($b[0] == null ? nil : $b[0])), $c;
        if (output['$==']("(")) {
          output = "" + "(" + (num)
          } else {
          output = "" + (output) + ", " + (num)
        };
        if ($truthy(($truthy($b = $rb_le(num, target)) ? $b : num['$=='](11)))) {
          
          target = num;
          successness = $rb_plus(successness, 1);
        } else if (num['$=='](12)) {
          isEnd = true
          } else {
          isEnd = true
        };
      };
      if (num['$=='](12)) {
        successness = 0};
      output = "" + (output) + ")  成功度 : " + (successness);
      if (num['$=='](12)) {
        output = "" + (output) + " ファンブル"};
      return output;
    }, TMP_CrashWorld_getCrashWorldRoll_5.$$arity = 1), nil) && 'getCrashWorldRoll';
  })($nesting[0], Opal.const_get_relative($nesting, 'DiceBot'), $nesting)
})(Opal);

/* Generated by Opal 0.11.4 */
(function(Opal) {
  var self = Opal.top, $nesting = [], nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

  Opal.add_stubs(['$exit']);
  return Opal.const_get_relative($nesting, 'Kernel').$exit()
})(Opal);
